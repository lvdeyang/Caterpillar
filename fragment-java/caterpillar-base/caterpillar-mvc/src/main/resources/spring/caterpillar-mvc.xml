<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"  
	xmlns:mvc="http://www.springframework.org/schema/mvc"  
	xmlns:util="http://www.springframework.org/schema/util" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-4.0.xsd">


	<!-- 
		**************
		*** 包扫描器   ***
		**************
	 -->

    <!-- 自动扫描的包名 -->
    <context:component-scan base-package="**.controller, pub.caterpillar.mvc.**.aop" ></context:component-scan>
    
    <!-- 
		**************
		***配置拦截器 ***
		**************
	 -->
    
    <!-- 拦截器 (这个方式会拦截静态资源)
    <mvc:interceptors>
    	<mvc:interceptor>
    		<mvc:mapping path="/**"/>
			<bean class="pub.caterpillar.mvc.interceptor.ExampleInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>-->
	
    
    
	<!-- 
		**************************************
		***支持@Controller 和 @RequestMapping***
		**************************************
	 -->
	
	<!-- 默认的注解映射的支持 (实际上只是初始化两个bean DefaultAnnotationHandlerMapping
    	 和 AnnotationMethodHandlerAdapter)这里我们自己初始化,掌握主导权
    <mvc:annotation-driven>
	    <mvc:message-converters>
	        <bean id="byteArray_hmc" class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />  
			<bean id="string_hmc" class="org.springframework.http.converter.StringHttpMessageConverter" />  
			<bean id="resource_hmc" class="org.springframework.http.converter.ResourceHttpMessageConverter" />  
			<bean id="source_hmc" class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />  
			<bean id="xmlAwareForm_hmc" class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter" />  
			<bean id="jaxb2RootElement_hmc" class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" />  
			<bean id="jackson_hmc" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">    
		        <property name="supportedMediaTypes">     
		            <list>
		                  <value>application/json; charset=utf-8</value>   
		            </list>
		        </property>
		    </bean>
	    </mvc:message-converters>
	</mvc:annotation-driven> 
    -->
	
	<!-- 默认的RequestMapping解析器，如果在子工程里创建了需要将这里注释掉 ——过时了，用
		 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping 替代
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">     
		<property name="interceptors">     
	    	<list>     
	        	<bean class="platform.mvc.interceptors.SystemInterceptor"></bean>
	    	</list>     
	 	</property>
	</bean>  
	-->
	
	<!-- 默认的RequestMapping解析器，如果在子工程里创建了需要将这里注释掉
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
		<property name="interceptors">     
	    	<list>     
	        	<bean class="platform.mvc.interceptors.SystemInterceptor"></bean>
	    	</list>     
	 	</property>
	</bean>-->
	
	<!-- 
		自定义RequestMapping
			1、对JsonpBody以及debug 模式下的JsonBody接口忽略method校验 
	-->
	<bean id="handlerMapping" class="pub.caterpillar.mvc.ext.request.mapping.IgnoreJsonpRequestMethodRequestMappingHandlerMapping"></bean>
	
	<!-- 处理方法级别上的@RequestMapping注解  —— 过时了， 用    
	org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter 替代
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
	    <property name="messageConverters">    
	        <list>    
	            <ref bean="byteArray_hmc" />    
	            <ref bean="string_hmc" />    
	            <ref bean="resource_hmc" />    
	            <ref bean="source_hmc" />    
	            <ref bean="xmlAwareForm_hmc" />    
	            <ref bean="jaxb2RootElement_hmc" />    
	            <ref bean="jackson_hmc" />    
	        </list>    
	    </property>    
	</bean>-->  
	
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">  
	    <property name="messageConverters">    
	        <list>    
	            <ref bean="byteArray_hmc" />    
	            <ref bean="string_hmc" />    
	            <ref bean="resource_hmc" />    
	            <ref bean="source_hmc" />    
	            <ref bean="xmlAwareForm_hmc" />    
	            <ref bean="jaxb2RootElement_hmc" />    
	            <ref bean="jackson_hmc" />    
	        </list>    
	    </property>    
	</bean> 
	<bean id="byteArray_hmc" class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />  
	<bean id="string_hmc" class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain; charset=utf-8</value>
			</list>
		</property>
	</bean>
	  
	<bean id="resource_hmc" class="org.springframework.http.converter.ResourceHttpMessageConverter" />  
	<bean id="source_hmc" class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />  
	<bean id="xmlAwareForm_hmc" class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter" />  
	<bean id="jaxb2RootElement_hmc" class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" />  
	<bean id="jackson_hmc" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">    
        <property name="supportedMediaTypes">     
            <list>
                  <value>application/json; charset=utf-8</value>   
            </list>
        </property>
    </bean>    
    
    
    <!-- 
		********************
		***  配置视图解析器   ***
		********************
	 -->
    
    <!-- 视图解析器 -->
   	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
   	<property name="prefix" value="/WEB-INF/jsp/"/>
    	<property name="suffix" value=".jsp"/>
    	<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
    </bean>
    
    
     <!-- 
		***************
		***  错误处理   ***
		***************
	 -->
    
	<!-- @JsonBody，@JsonpBody以外的异常处理  -->
	<bean id="exceptionResolver" class="pub.caterpillar.mvc.ext.exception.ForwardExceptionResolver"></bean>
	
	<!-- <bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
	</bean> -->
	    <!-- 文件上传配置 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <!-- 上传的最大限制 -->
		<property name="maxUploadSize" value="209715200" />
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 上传文件的解析 -->
		<property name="resolveLazily" value="true" />
    </bean>
	
	
	
	<!-- 建立静态资源映射 
	<mvc:resources mapping="/mobile/**" location="/mobile/" cache-period="31556926"/>
	<mvc:resources mapping="/images/**" location="/images/" cache-period="31556926"/>
	<mvc:resources mapping="/web/**" location="/web/" cache-period="31556926"/>  
	-->
	
	<mvc:resources mapping="/layui/**" location="/layui/" cache-period="31556926"/>
	<mvc:resources mapping="/lib/**" location="/lib/" cache-period="31556926"/>
	<mvc:resources mapping="/app/**" location="/app/" cache-period="31556926"/>
	<mvc:resources mapping="/dist/**" location="/dist/" cache-period="31556926"/>
	<mvc:resources mapping="/images/**" location="/dist/" cache-period="31556926"/>
	<mvc:resources mapping="/webtheme/**" location="/webtheme/" cache-period="31556926"/>
	<mvc:resources mapping="/mobile/**" location="/mobile/" cache-period="31556926"/>
	<!-- <mvc:resources mapping="/web/**" location="/web/" cache-period="31556926"/> -->
	
</beans> 
